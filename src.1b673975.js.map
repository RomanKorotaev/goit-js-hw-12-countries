{"version":3,"sources":["index.js"],"names":["refs","inputRef","document","querySelector","submitBtmRef","countryListRef","handlSubmit","event","preventDefault","console","log","value","nameOfCountry","fetch","then","response","json","country","renderColection","catch","err","createItem","name","result","insertAdjacentHTML","arr","forEach","el","countryItem","addEventListener"],"mappings":";;;AA0CA,aAzCA,QAAA,oBAEA,MAAMA,EAAO,CACTC,SAAUC,SAASC,cAAc,WACjCC,aAAcF,SAASC,cAAc,cACrCE,eAAgBH,SAASC,cAAc,iBAGrCG,EAAeC,IACjBA,EAAMC,iBACNC,QAAQC,IAAI,yBAA0BV,EAAKC,SAASU,OAC9CC,MAAAA,EAAgBZ,EAAKC,SAASU,MAGpCE,+CAA+CD,KAC9CE,KAAKC,GAAYA,EAASC,QAE1BF,KAAKG,GAAUC,EAAgBD,IAC/BE,MAAMC,GAAKX,QAAQC,IAAI,uCAAuCU,KAMnE,SAASC,GAAW,KAACC,IACXC,MAAAA,SAAgBD,SACtBtB,EAAKK,eAAemB,mBAAmB,YAAaD,GAIxD,SAASL,EAAgBO,GACrBA,EAAIC,QAAQC,GAAMN,EAAYM,IAKlC,MAAMC,EAAe,kBAKrB5B,EAAKI,aAAayB,iBAAkB,QAASvB","file":"src.1b673975.js","sourceRoot":"../src","sourcesContent":["\nimport './sass/main.scss';\n\nconst refs = {\n    inputRef: document.querySelector('#search'),\n    submitBtmRef: document.querySelector('#submitBtm'),\n    countryListRef: document.querySelector('.countryList')\n}\n\nconst handlSubmit = (event) => {\n    event.preventDefault();\n    console.log('refs.inputRef.value = ', refs.inputRef.value);\n    const nameOfCountry = refs.inputRef.value;\n\n    // Эндпоинт из задания: https://restcountries.eu/rest/v2/name/{name}\n    fetch(`https://restcountries.eu/rest/v2/name/${nameOfCountry}`)\n    .then(response => response.json())\n    //.then(country => console.log(country))\n    .then(country =>renderColection(country))\n    .catch(err=>console.log('От бекенда пришёл промис с ошибкой! ',err))\n}\n\n// Данная функция получает объект, из которого нам нужен только кльч с именем. \n//Назначение функции добавлять и отрисовывать в DOM-элемент то, что получили от бекэнда\n//Для удобства проводим деструктуризацию {name} , чтобы взять из множества ключей, которые есть в объекте, только нужный \nfunction createItem({name}) {\n    const result = `<li>${name}</li>`\n    refs.countryListRef.insertAdjacentHTML(\"beforeend\", result);\n}\n\n// Для отрисовки массива данных, которые приходят от бэкенда используем цикл\nfunction renderColection(arr) {\n    arr.forEach(el => createItem (el))\n}\n \n\n\nconst countryItem = `\n <p>...</p>\n`\n\n\nrefs.submitBtmRef.addEventListener (\"click\", handlSubmit)\n"]}